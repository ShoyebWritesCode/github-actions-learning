name: Code Quality and Auto Merge

# Triggers the workflow on pull requests to the main branch
on:
  pull_request:
    branches:
      - main

jobs:


  phpcs:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository
      - uses: actions/checkout@v3

      # Install Composer dependencies
      - name: Composer install
        uses: php-actions/composer@v6

      # Run PHP Code Sniffer
      - name: PHP Code Sniffer
        uses: php-actions/phpcs@v1
        with:
          php_version: 8.1  
          path: src/         
          standard: PSR1 
          
  check-camelcase:
    needs: phpcs
    runs-on: ubuntu-latest
    if: success()

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '21.7.1'

    - name: Install dependencies
      run: npm install

    - name: Check camelCase naming
      run: node workflowScripts/check-camelcase.js

    
  check-console-log:
    needs: check-camelcase
    runs-on: ubuntu-latest
    if: success()

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Search for console.log
      run: |
        if grep -rnw 'console.log' ./src; then
          echo "console.log found, failing the build"
          exit 1
        else
          echo "No console.log found, proceeding"
        fi
  
  check-script-tags:
    needs: check-console-log
    runs-on: ubuntu-latest
    if: success()
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Check for multiple script tags in HTML files
      run: |
        # Define the directory to search for HTML files
        SEARCH_DIR="src"
      
        # Find all HTML files in the directory
        HTML_FILES=$(find "$SEARCH_DIR" -type f -name '*.html')
      
        # Initialize flag to track if any file has more than one <script> tag
        FAIL_BUILD=0
      
        # Loop through each HTML file and check for multiple <script> tags
        for file in $HTML_FILES; do
          SCRIPT_COUNT=$(grep -o '<script' "$file" | wc -l)
            if [ "$SCRIPT_COUNT" -gt 1 ]; then
              echo "Error: The file $file has more than one <script> tag."
              FAIL_BUILD=1
            fi
              done
      
        # Fail the build if any file had more than one <script> tag
        if [ "$FAIL_BUILD" -eq 1 ]; then
          exit 1
        else
           echo "All HTML files have one or no <script> tags."
        fi

  auto-merge:
    needs: check-script-tags
    runs-on: ubuntu-latest
    if: success()

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
       token: ${{ secrets.GH_TOKEN }}
      
    - name: Set up Git config
      run: |
       git config user.name 'github-actions[bot]'
       git config user.email 'github-actions[bot]@users.noreply.github.com'

    
    - name: Fetch all branches
      run: |
       git fetch --all
       
    - name: Checkout main branch
      run: |
       git checkout main

    - name: Merge the PR branch
      run: |
       git merge origin/${{ github.head_ref }} --no-ff -m "Merge pull request #${{ github.event.pull_request.number }} from ${{ github.head_ref }}"

    - name: Push changes to main
      env:
       GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
       git push https://x-access-token:${GH_TOKEN}@github.com/ShoyebWritesCode/github-actions-learning.git main

  notify:
    needs: auto-merge
    runs-on: ubuntu-latest
    if: success()

    steps:
    - name: Send email notification
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: mdsoyeb181811@gmail.com
        password: ${{ secrets.SMTP_PASSWORD }}
        subject: Pull Request Merged Successfully
        body: The pull request has been merged into the main branch successfully.
        to: mdsoyeb@iut-dhaka.edu
        from: mdsoyeb181811@gmail.com

  post-pr-comment:
    needs: notify
    runs-on: ubuntu-latest
    if: success()
      
    steps:
    - name: Post comment on PR
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GH_TOKEN }}
        script: |
          const celebrationGifs = [
            'https://c.tenor.com/ZCq4SwgCfxAAAAAC/snoopy-peanuts.gif',
            'https://c.tenor.com/Z0ojZS2kpO0AAAAC/milk-and-mocha-happy.gif',
            'https://c.tenor.com/LffD4a8ET9AAAAAC/heart-celebrate.gif',
            'https://c.tenor.com/HJ0iSKwIG28AAAAC/yes-baby.gif',
            'https://c.tenor.com/4blWuIh5MIYAAAAC/baby-yoda.gif',
            'https://c.tenor.com/B_zYdea4l-4AAAAC/yay-minions.gif',
            'https://media1.giphy.com/media/artj92V8o75VPL7AeQ/giphy.gif',
            'https://media2.giphy.com/media/IwAZ6dvvvaTtdI8SD5/giphy.gif',
            'https://media0.giphy.com/media/z8gtBVdZVrH20/giphy.gif',
            'https://media2.giphy.com/media/26gN16cJ6gy4LzZSw/giphy.gif',
            'https://media1.giphy.com/media/LZElUsjl1Bu6c/giphy.gif',
            'https://media1.giphy.com/media/gHnwTttExPf4nwOWm7/giphy.gif',
          ]
          const getRandomGif = () => celebrationGifs[Math.floor(Math.random() * celebrationGifs.length)];
          const gif = `![celebration gif](${getRandomGif()})`;
          const { data: comment } = await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: `The workflow has completed successfully and the pull request has been merged into the main branch.\n\n${gif}`
          });
      
